set(MODULE TRUE)

set(EXPORTED_SYMBOL_FILE $(PROJ_SRC_DIR)/gold.exports)

set( LLVM_LINK_COMPONENTS
  #support
  LTO
)

include_directories(${BINUTILS_INCDIR})

add_llvm_loadable_module(LLVMgold
  gold-plugin.cpp
)


target_link_libraries(LLVMgold
-Wl,--start-group LLVMAnalysis LLVMArchive LLVMAsmParser LLVMAsmPrinter LLVMAVM2ShimCodeGen LLVMAVM2ShimInfo LLVMBitReader LLVMBitWriter LLVMCodeGen LLVMCore LLVMExecutionEngine LLVMInstCombine LLVMInstrumentation LLVMInterpreter LLVMipa LLVMipo LLVMJIT LLVMLinker LLVMMC LLVMMCDisassembler LLVMMCJIT LLVMCBackend LLVMCBackendInfo LLVMMCParser LLVMObject LLVMScalarOpts LLVMSelectionDAG LLVMSupport LLVMTarget LLVMTransformUtils LLVMX86AsmParser LLVMX86AsmPrinter LLVMX86CodeGen LLVMX86Disassembler LLVMX86Info LLVMX86Utils LTO -Wl,--end-group)
if(MINGW)
  target_link_libraries(LLVMgold -lrpcrt4)
endif()

#if(CYGWIN OR LLVM_CYGWINMAC)
  target_link_libraries(LLVMgold -luuid)
#endif()



